# Определяем расширение для общих настроек логирования
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  # Backend-сервис: основное приложение
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: eaistsync_backend
    ports:
      - "${PORT}:8080"  # Внешний порт из .env, внутренний — 8080
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started
      minio:
        condition: service_started
    env_file:
      - .env
    restart: on-failure
    logging: *default-logging
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: "512M"
        reservations:
          cpus: "0.5"
          memory: "256M"
    networks:
      - eaistsync_network

  # Frontend-сервис: сборка и запуск веб-интерфейса
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eaistsync_frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    env_file:
      - .env
    restart: on-failure
    logging: *default-logging
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "256M"
        reservations:
          cpus: "0.25"
          memory: "128M"
    networks:
      - eaistsync_network

  # Postgres: база данных для приложения
  postgres:
    image: bitnami/postgresql:latest
    container_name: eaistsync_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: eaistsync
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging: *default-logging
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
        reservations:
          cpus: "0.25"
          memory: "256M"
    networks:
      - eaistsync_network

  # Zookeeper: необходим для работы Kafka
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: eaistsync_zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    restart: unless-stopped
    logging: *default-logging
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "256M"
        reservations:
          cpus: "0.125"
          memory: "128M"
    networks:
      - eaistsync_network

  # Kafka: брокер сообщений для обмена данными
  kafka:
    image: bitnami/kafka:latest
    container_name: eaistsync_kafka
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: eaistsync_zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://eaistsync_kafka:9092
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD-SHELL", "echo 'dummy check'"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging: *default-logging
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
        reservations:
          cpus: "0.25"
          memory: "256M"
    networks:
      - eaistsync_network

  # MinIO: сервер объектного хранилища
  minio:
    image: minio/minio:latest
    container_name: eaistsync_minio
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # WebUI
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    logging: *default-logging
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "512M"
        reservations:
          cpus: "0.25"
          memory: "256M"
    networks:
      - eaistsync_network

volumes:
  minio_data:

networks:
  eaistsync_network:
    name: eaistsync_network
    driver: bridge